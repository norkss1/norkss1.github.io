{"version":3,"sources":["modules/API.js","views/visitsView.js","filters/filters.js","models/visitsModel.js","modules/getVisitsFromServer.js","modules/sendDataFormOnServer.js","modules/ClassModal.js","modules/classInputs.js","modules/classSelect.js","modules/classTextarea.js","modules/classForms.js","modules/Layout.js","scripts/index.js"],"names":["LINK","cards","login","authorization","headersTemplate","localStorage","getItem","undefined","auth","user","fetch","method","headers","body","JSON","stringify","getCards","then","r","json","getOneCards","ip","addCard","cardObj","delCards","changeCard","changeObj","res","text","response","visitOneView","visit","visitHTML","document","querySelector","doctor","insertAdjacentHTML","renderDentist","renderCardiologist","renderTherapist","deleteVisit","editVisit","visitsView","visitsArray","innerHTML","length","forEach","items","querySelectorAll","item","addEventListener","shoowInput","element","nextElementSibling","classList","toggle","value","renderForm","arg","editID","elem","getElementById","form","style","display","id","urgency","date","title","description","dateOfLastVisit","fullName","age","bodyMass","disease","pressure","parentElement","arrayVisitsView","errorResponse","ok","error","e","Error","data","STATUS_FILTER","PRIORITY_FILTER","visitLayout","filterArray","outputGoods","goods","renderFilters","html","map","option","statusGoods","status","priority","search","toString","toLowerCase","background","currentDate","Date","getTime","filter","n","includes","Visit","constructor","preventDefault","deleteID","target","remove","VisitCardiologist","weight","VisitDentist","VisitTherapist","getVisits","responses","createVisitForView","object","cardObjView","push","cardObjCreate","testObj","formData","FormData","key","entries","reset","newForm","parse","cardObjEdit","Modal","content","selector","renderModal","Input","typeInput","classInput","nameInput","label","name","renderInput","loginForm","elem1","elem2","formLogin","createElement","Select","classSelect","nameSelect","stringSelect","renderSelect","comma","arrayString","split","Textarea","rows","cols","classTextarea","class","renderTextarea","Form","renderDoctor","elemSelect","elemCreate2","elemCreate4","elemTextarea","formValid","formReq","event","errors","i","className","color","insertBefore","FormCardiolog","elemCreate1","elemCreate5","elemCreate6","elemCreate7","elemCreate8","FormDentist","FormTherapist","init","renderModalform","responseEnter","getBtn","email","password","token","setItem","enter","modal","buttonCreateVisit","btnExit","click","buttonExit","add","type","prepend","exit","returnValue","additionalForm","dateNow","name_input","d","day","getDate","month","getMonth","year","getFullYear","enterAdd","SiblingsInput","removeItem","location","reload","testLayaut","elementDeleteINArray","array","splice"],"mappings":"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","file":"scripts.761e88ba.js","sourceRoot":"..","sourcesContent":["const LINK = {\r\n    cards: 'https://ajax.test-danit.com/api/v2/cards',\r\n    login: 'https://ajax.test-danit.com/api/v2/cards/login'\r\n}\r\n\r\n\r\nfunction authorization(){\r\n    const headersTemplate = {\r\n    'Content-type': 'application/json',\r\n    'Authorization': localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : undefined\r\n\r\n}\r\n    return headersTemplate\r\n\r\n}\r\nconst auth = (user) => {\r\n    return fetch(LINK.login, {\r\n        method: 'POST',\r\n        headers: authorization(),\r\n        body: JSON.stringify(user)\r\n    })\r\n}\r\n\r\nconst getCards = () => {\r\n    return fetch(LINK.cards, {\r\n        headers: authorization()\r\n    }).then(r => r.json())\r\n}\r\n\r\nconst getOneCards = (ip) => {\r\n    return fetch(`${LINK.cards}/${ip}`, {\r\n        method: 'GET',\r\n        headers: authorization()\r\n    })\r\n}\r\n\r\nconst addCard = (cardObj) => {\r\n    return fetch(LINK.cards, {\r\n        method: 'POST',\r\n        body: JSON.stringify(cardObj),\r\n        headers: authorization()\r\n    })\r\n}\r\n\r\nconst delCards = (ip) => {\r\n    return fetch(`${LINK.cards}/${ip}`, {\r\n        method: 'DELETE',\r\n        headers: authorization()\r\n    })\r\n}\r\n\r\nfunction changeCard(ip, changeObj) {\r\n    return fetch(`${LINK.cards}/${ip}`, {\r\n        method: 'PUT',\r\n        headers: authorization(),\r\n        body: JSON.stringify(changeObj)\r\n    }).then(res => res.text())\r\n        .then(response => (response))\r\n}\r\n\r\nexport default {\r\n    getOneCards,\r\n    changeCard,\r\n    delCards,\r\n    auth,\r\n    getCards,\r\n    addCard,\r\n    authorization\r\n}\r\n","import {cardObjEdit} from \"/modules/sendDataFormOnServer\";\r\nimport {visitLayout} from \"../filters/filters\";\r\nimport {arrayVisitsView} from \"../scripts\";\r\n\r\n\r\nfunction visitOneView(visit){\r\n\r\n    let visitHTML = document.querySelector('.visits__item-wrapper');\r\n\r\n    if(visit.doctor === 'Стоматолог'){\r\n        visitHTML.insertAdjacentHTML(\"afterbegin\", visit.renderDentist(visit))\r\n    }else\r\n    if (visit.doctor === 'Кардиолог'){\r\n        visitHTML.insertAdjacentHTML(\"afterbegin\", visit.renderCardiologist(visit))\r\n    }else\r\n    if (visit.doctor === 'Терапевт'){\r\n        visitHTML.insertAdjacentHTML(\"afterbegin\", visit.renderTherapist(visit))\r\n    }\r\n    visit.deleteVisit(visit)\r\n   visit.editVisit(visit)\r\n}\r\n\r\nfunction visitsView(visitsArray) {\r\n\r\n    let visitHTML = document.querySelector('.visits__item-wrapper');\r\n    visitHTML.innerHTML = '';\r\n\r\n    if (!visitsArray.length){\r\n        visitHTML.insertAdjacentHTML(\"afterbegin\", `<h2>No items have been added</h2>`)\r\n    }else {\r\n        visitsArray.forEach(visit => {\r\n            visitOneView(visit)\r\n        })\r\n    }\r\n\r\n    const items = document.querySelectorAll('.button__more');\r\n\r\n    for (const item of items) {\r\n        item.addEventListener('click', () => {\r\n           shoowInput(item)\r\n        })\r\n    }\r\n    function shoowInput(element) {\r\n        element.nextElementSibling.classList.toggle('visible');\r\n        if (element.value === \"Показать больше\") {\r\n            element.value = \"Скрыть\";\r\n        } else {\r\n            element.value = \"Показать больше\";\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction renderForm(arg, editID) {\r\n\r\n    const elem = document.getElementById(`${editID}`)\r\n    const form = document.getElementById(`test${editID}`)\r\n    elem.style.display = \"none\"\r\n\r\n    if (arg.doctor === \"Стоматолог\") {\r\n\r\n        const {doctor, id, urgency, date, title, description, dateOfLastVisit, fullName} = arg;\r\n\r\n        form.insertAdjacentHTML('afterend',\r\n            ` \r\n                            <h4>Визит к ${doctor}у</h4>\r\n                            <form id=\"form__edit_${id}\">\r\n                            <select id=\"selectDoctors\"  class=\"form-select\"  style=\"display: none\" name=\"doctor\" aria-label=\"Default select example\">\r\n                              <option value=\"Стоматолог\" selected>Стоматолог</option>\r\n                            </select>\r\n                            <select class=\"form-select clear\" name=\"urgency\" aria-label=\"Выберите срочность\">\r\n                              <option selected>Срочность</option>\r\n                              <option value=\"Обычная\" ${urgency === \"Обычная\" ? \"selected\" : \"\"} >Обычная</option>\r\n                              <option value=\"Приоритетная\" ${urgency === \"Приоритетная\" ? \"selected\" : \"\"}>Приоритетная</option>\r\n                              <option value=\"Неотложная\" ${urgency === \"Неотложная\" ? \"selected\" : \"\"}>Неотложная</option>\r\n                            </select>                                                    \r\n                            <input class=\"form-control clear\" name=\"date\" type=\"date\" value=${date} id=\"dateNow\" title=\"Введите дату посещения врача\">\r\n                            <input class=\"form-control clear\" name=\"title\" type=\"text\" value='${title}' placeholder=\"Цель визита\" title=\"Введите цель визита\">\r\n                            <input class=\"form-control clear\" name=\"description\" type=\"text\" value='${description}' placeholder=\"Краткое описание визита\" title=\"Введите краткое описание визита\">\r\n                            <input class=\"form-control clear\" name=\"fullName\" type=\"text\" value='${fullName}' placeholder=\"ФИО\" title=\"Введите Фамилию Имя Отчество\">\r\n                            <input class=\"form-control clear\" name=\"dateOfLastVisit\" type=\"date\" value=${dateOfLastVisit} placeholder=\"Дата последнего визита\" title=\"Введите дату последнего посещения\">\r\n                          </form> \r\n                         <button  class=\"button__edit\">Сохранить изменения</button>\r\n                         <button  class=\"button__undo\">Отмена</button>\r\n                        `)\r\n    }\r\n    if (arg.doctor === 'Кардиолог') {\r\n\r\n        const {age, id, bodyMass, date, description, disease, doctor, fullName, pressure, title, urgency} = arg;\r\n\r\n        form.insertAdjacentHTML('afterend',\r\n            `\r\n                             <h4>Визит к ${doctor}у</h4>\r\n                            <form id=\"form__edit_${id}\">  \r\n                            <select id=\"selectDoctors\"  class=\"form-select\" style=\"display: none\" name=\"doctor\" aria-label=\"Default select example\">\r\n                              <option value=\"Кардиолог\" selected>Кардиолог</option>\r\n                            </select>\r\n                            <select class=\"form-select clear\" name=\"urgency\" aria-label=\"Выберите срочность\">\r\n                              <option selected>Срочность</option>\r\n                              <option value=\"Обычная\" ${urgency === \"Обычная\" ? \"selected\" : \"\"} >Обычная</option>\r\n                              <option value=\"Приоритетная\" ${urgency === \"Приоритетная\" ? \"selected\" : \"\"}>Приоритетная</option>\r\n                              <option value=\"Неотложная\" ${urgency === \"Неотложная\" ? \"selected\" : \"\"}>Неотложная</option>\r\n                            </select>\r\n                            <input class=\"form-control clear\" name=\"date\" value=${date} type=\"date\" id=\"dateNow\" title=\"Введите дату посещения врача\">\r\n                            <input class=\"form-control clear\" name=\"title\" value='${title}' type=\"text\" placeholder=\"Цель визита\" title=\"Введите цель визита\">\r\n                            <input class=\"form-control clear\" name=\"description\" value='${description}' type=\"text\" placeholder=\"Краткое описание визита\" title=\"Введите краткое описание визита\">\r\n                            <input class=\"form-control clear\" name=\"fullName\" value='${fullName}' type=\"text\" placeholder=\"ФИО\" title=\"Введите Фамилию Имя Отчество\">\r\n                            <input class=\"form-control clear\" name=\"pressure\" value='${pressure}' type=\"text\" placeholder=\"Обычное давление\" title=\"Введите давление в формате XXX/XX\">\r\n                            <input class=\"form-control clear\" name=\"bodyMass\" value='${bodyMass}' type=\"text\" placeholder=\"Масса тела\" title=\"Введите массу тела\">\r\n                            <input class=\"form-control clear\" name=\"disease\" value='${disease}' type=\"text\" placeholder=\"Заболевания\" title=\"Введите перенесенные заболевания сердечно-сосудистой системы\">\r\n                            <input class=\"form-control clear\" name=\"age\" value=${age} type=\"text\" placeholder=\"Возраст\" title=\"Введите возраст пациента\">\r\n                            </form>\r\n                        <button  class=\"button__edit\">Сохранить изменения</button>\r\n                        <button  class=\"button__undo\">Отмена</button>\r\n                        `)\r\n    }\r\n    if (arg.doctor === 'Терапевт') {\r\n        const {age, id, date, description, doctor, fullName, title, urgency} = arg;\r\n\r\n        form.insertAdjacentHTML('afterend',\r\n            `\r\n                              <h4>Визит к ${doctor}у</h4>\r\n                            <form id=\"form__edit_${id}\">\r\n                            <select id=\"selectDoctors\"  class=\"form-select\" style=\"display: none\" name=\"doctor\" aria-label=\"Default select example\">\r\n                              <option value=\"Терапевт\" selected>Терапевт</option>\r\n                            </select>\r\n                            <select class=\"form-select clear\" name=\"urgency\" aria-label=\"Выберите срочность\">\r\n                              <option selected>Срочность</option>\r\n                              <option value=\"Обычная\" ${urgency === \"Обычная\" ? \"selected\" : \"\"} >Обычная</option>\r\n                              <option value=\"Приоритетная\" ${urgency === \"Приоритетная\" ? \"selected\" : \"\"}>Приоритетная</option>\r\n                              <option value=\"Неотложная\" ${urgency === \"Неотложная\" ? \"selected\" : \"\"}>Неотложная</option>\r\n                            </select>\r\n                            <input class=\"form-control clear\" name=\"date\" value=${date} type=\"date\" id=\"dateNow\" title=\"Введите дату посещения врача\">\r\n                            <input class=\"form-control clear\" name=\"title\" value='${title}' type=\"text\" placeholder=\"Цель визита\" title=\"Введите цель визита\">\r\n                            <input class=\"form-control clear\" name=\"description\" value='${description}' type=\"text\" placeholder=\"Краткое описание визита\" title=\"Введите краткое описание визита\">\r\n                            <input class=\"form-control clear\" name=\"fullName\" type=\"text\" value='${fullName}' placeholder=\"ФИО\" title=\"Введите Фамилию Имя Отчество\">\r\n                            <input class=\"form-control clear\" name=\"age\" value=${age} type=\"text\" placeholder=\"Возраст\" title=\"Введите возраст пациента\">\r\n                            </form>\r\n                      <button  class=\"button__edit\">Сохранить изменения</button>\r\n                      <button  class=\"button__undo\">Отмена</button>\r\n                        `)\r\n\r\n    }\r\n\r\n\r\n    form.parentElement.querySelector('.button__edit').addEventListener(`click`, () => {\r\n        cardObjEdit(editID)\r\n    })\r\n\r\n    form.parentElement.querySelector('.button__undo').addEventListener(`click`, () => {\r\n        visitLayout(arrayVisitsView)\r\n    })\r\n\r\n}\r\n\r\nfunction errorResponse(res) {\r\n    if (res.ok) {\r\n        return res.json()\r\n    }\r\n    return res.text().then(error => {\r\n        const e = new Error('Упс  , что то пошло не так...')\r\n        e.data = error\r\n        throw e\r\n    })\r\n}\r\n\r\nexport {visitsView};\r\nexport  {visitOneView};\r\nexport {renderForm};\r\nexport {errorResponse};\r\n","import {visitsView} from '/views/visitsView';\r\n\r\nconst STATUS_FILTER = ['All', 'open', 'done'];\r\nconst PRIORITY_FILTER = ['All', 'Неотложная', 'Приоритетная', 'Обычная'];\r\n\r\n\r\n// Рендер страницы с формами и списком выбора фильтра\r\nfunction visitLayout(filterArray) {\r\n\r\n    function renderFilters() {\r\n        // Рендер страницы с формами\r\n        let html = '<div><div class=\"filters-header\" id=\"filtersHeader\">';\r\n\r\n        html += `<div class=\"container\"><div class=\"row\">\r\n                <div class=\"col-sm\">\r\n                    <label class=\"status-label\">Status:</label>\r\n                        <select class=\"form-select\" id=\"status-filter\">\r\n                                    ${STATUS_FILTER.map((option) => `\r\n                            <option value=\"${option}\">${option}</option>`)}\r\n                        </select>\r\n                </div>`;\r\n\r\n        html += `<div class=\"col-sm\">\r\n                <label class=\"status-label\">Priority:</label>\r\n                <select class=\"form-select\" id=\"priority-filter\">\r\n                           ${PRIORITY_FILTER.map((option) => `\r\n                    <option value=\"${option}\">\r\n                        ${option}\r\n                    </option>`)}\r\n                </select>\r\n             </div>`\r\n\r\n        html += `<div class=\"search col-sm\">\r\n                <label for=\"session-search\" class=\"form-label\">Search:</label>\r\n                <input class=\"search-input\" id=\"cardsSearch\" type=\"search\" value=\"\" />\r\n             </div>`\r\n\r\n        html += '</div></div>'\r\n\r\n        document.querySelector('.filters').innerHTML = html;\r\n    }\r\n\r\n    renderFilters();\r\n\r\n\r\n    // Фильтр\r\n    const filter = document.getElementById('filtersHeader');\r\n    filter.addEventListener('input', statusGoods);\r\n    outputGoods(filterArray); // запуск функции для начального отображения\r\n\r\n    function statusGoods() {\r\n        let status = document.getElementById('status-filter').value;\r\n        let priority = document.getElementById('priority-filter').value\r\n        const search = document.getElementById('cardsSearch').value.toString().toLowerCase();\r\n\r\n        // Проверка на наличие текста и если текст есть, то картинку не показывать\r\n        if (search !== '') {\r\n            document.getElementById('cardsSearch').style.background = 'none';\r\n        } else {\r\n            document.getElementById('cardsSearch').style.background = 'url(https://img.icons8.com/plasticine/30/000000/google-web-search.png) no-repeat';\r\n        }\r\n\r\n        let currentDate = new Date().getTime();\r\n\r\n        outputGoods(filterArray.filter(n => (\r\n            ((priority === 'All' || n.urgency === priority) &&                               // фильтр по приоритету\r\n                (status === 'All' ||                                                         // фильтр по статусу\r\n                    ((new Date(n.date).getTime()) < currentDate) && status === 'done' ||\r\n                    ((new Date(n.date).getTime()) > currentDate) && status === 'open') &&  // фильтр по вводу текста\r\n                ((n.doctor.toLowerCase().includes(search)) || (n.description.toLowerCase().includes(search)) || (n.fullName.toLowerCase().includes(search)))\r\n            )\r\n        )))\r\n    }\r\n\r\n    function outputGoods(goods) {\r\n\r\n        visitsView(goods);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {visitLayout};\r\n","import API from \"../modules/API\";\r\nimport {arrayVisitsView} from \"../scripts\";\r\nimport {visitLayout} from \"../filters/filters\";\r\nimport {renderForm} from \"../views/visitsView\";\r\nimport {elementDeleteINArray} from \"../scripts\";\r\n\r\nclass Visit {\r\n    constructor({id, doctor, date, title, description, urgency, fullName}) {\r\n        this.id = id;\r\n        this.doctor = doctor;\r\n        this.date = date;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.urgency = urgency;\r\n        this.fullName = fullName;\r\n    }\r\n\r\n\r\n    deleteVisit(visit) {\r\n        const deleteIcon = document.getElementById(`${visit.id}`).querySelector('.fa-trash-alt');\r\n        deleteIcon.addEventListener('click', (elem) => {\r\n            elem.preventDefault();\r\n            const deleteID = visit.id;\r\n            API.delCards(deleteID)\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        elem.target.parentElement.parentElement.parentElement.parentElement.parentElement.remove()\r\n                    }\r\n                });\r\n            elementDeleteINArray(arrayVisitsView, deleteID)\r\n            visitLayout(arrayVisitsView)\r\n        })\r\n    }\r\n\r\n\r\n    editVisit(visit) {\r\n        const editIcon = document.getElementById(`${visit.id}`).querySelector('.fa-edit');\r\n        editIcon.addEventListener('click', (elem) => {\r\n            elem.preventDefault();\r\n\r\n            const editID = visit.id;\r\n\r\n            renderForm(this, editID)\r\n\r\n        })\r\n    }\r\n\r\n}\r\n\r\nclass VisitCardiologist extends Visit {\r\n    constructor({id, doctor, date, title, description, urgency, fullName, pressure, bodyMass, disease, age}) {\r\n        super({id, doctor, date, title, description, urgency, fullName});\r\n        this.pressure = pressure;\r\n        this.bodyMass = bodyMass;\r\n        this.disease = disease;\r\n        this.age = age;\r\n    }\r\n\r\n    renderCardiologist(visit) {\r\n\r\n        return `<div class=\"visit__item\" >\r\n                       <div  id=\"${visit.id}\"> <ul class=\"visit__base\">\r\n                            \r\n                            <div class=\"visit__item-title\">\r\n                                    <div class=\"visit__base--title\" name=\"${visit.id}\">Visit Cards</div>  \r\n                                    \r\n                                    <div class=\"edit__button\">\r\n                                    <i class=\"fas fa-edit\" ></i>\r\n                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                    </div>\r\n                                       \r\n                            </div>\r\n                            <li class=\"visit__fullName\"><span class=\"span\">ФИО:</span><p>${visit.fullName}</p></li>  \r\n                            <li class=\"visit__doctor\"><span class=\"span\">Доктор:</span><p>${visit.doctor}</p></li>\r\n                        </ul>\r\n                        <input type=\"button\" value=\"Показать больше\" class=\"button__more\">\r\n                        <ul class=\"visit__option\">\r\n                            <li class=\"visit__title\"><span class=\"span\">Цель визита: </span><p>${visit.title}</p></li>\r\n                            <li class=\"visit__description\"><span class=\"span\">Описание визита: </span><p>${visit.description}</p></li>\r\n                            <li class=\"visit__urgency\"><span class=\"span\">Срочность: </span><p>${visit.urgency}</p></li>\r\n                            <li class=\"visit__date\"><p>${visit.date ? `<span class=\"span\">Дата визита: </span>${visit.date}` : ''}</p></li>\r\n                            <li class=\"visit__pressure\"><p>${(visit.pressure) ? `<span class=\"span\">Давление: </span> ${visit.pressure}` : ''}</p></li>\r\n                            <li class=\"visit__weight\"><p>${visit.weight ? `<span class=\"span\">Вес: </span>${visit.weight}` : ''}</p></li>\r\n                            <li class=\"visit__disease\"><p>${visit.disease ? `<span class=\"span\">Перенесенные заболевания: </span>${visit.disease}` : ''}</p></li>\r\n                            <li class=\"visit__age\"><p>${visit.age ? `<span class=\"span\">Возраст: </span>${visit.age}` : ``}</p></li>                                               \r\n                        </ul></div>\r\n                        <div  id=\"test${visit.id}\"></div>\r\n                    </div>\r\n            `;\r\n    }\r\n\r\n    deleteVisit(visit) {\r\n        super.deleteVisit(visit);\r\n    }\r\n\r\n    editVisit(visit) {\r\n        super.editVisit(visit);\r\n    }\r\n\r\n}\r\n\r\nclass VisitDentist extends Visit {\r\n    constructor({id, doctor, date, title, description, urgency, fullName, dateOfLastVisit}) {\r\n        super({id, doctor, date, title, description, urgency, fullName});\r\n        this.dateOfLastVisit = dateOfLastVisit;\r\n    }\r\n\r\n    renderDentist(visit) {\r\n\r\n        return `<div class=\"visit__item\" >\r\n                       <div  id=\"${visit.id}\"> <ul class=\"visit__base\">\r\n                            \r\n                            <div class=\"visit__item-title\">\r\n                                    <div class=\"visit__base--title\" name=\"${visit.id}\">Visit Cards</div>  \r\n                                   \r\n                                    <div class=\"edit__button\">\r\n                                    <i class=\"fas fa-edit\" ></i>\r\n                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                    </div>\r\n                                       \r\n                            </div>\r\n                            <li class=\"visit__fullName\"><span class=\"span\">ФИО:</span><p>${visit.fullName}</p></li>  \r\n                            <li class=\"visit__doctor\"><span class=\"span\">Доктор:</span><p>${visit.doctor}</p></li>\r\n                        </ul>\r\n                        <input type=\"button\" value=\"Показать больше\" class=\"button__more\">\r\n                        <ul class=\"visit__option\">\r\n                            <li class=\"visit__title\"><span class=\"span\">Цель визита: </span><p>${visit.title}</p></li>\r\n                            <li class=\"visit__description\"><span class=\"span\">Описание визита: </span><p>${visit.description}</p></li>\r\n                            <li class=\"visit__urgency\"><span class=\"span\">Срочность: </span><p>${visit.urgency}</p></li>\r\n                            <li class=\"visit__date\"><p>${visit.date ? `<span class=\"span\">Дата визита: </span>${visit.date}` : ''}</p></li>\r\n                            <li class=\"visit__date\"><p>${visit.dateOfLastVisit ? `<span class=\"span\">Последний визит: </span>${visit.dateOfLastVisit}` : ''}</p></li>                                                             \r\n                        </ul></div>\r\n                        <div  id=\"test${visit.id}\"></div>\r\n                    </div>\r\n            `;\r\n    }\r\n\r\n    deleteVisit(visit) {\r\n        super.deleteVisit(visit);\r\n    }\r\n\r\n    editVisit(visit) {\r\n        super.editVisit(visit);\r\n    }\r\n\r\n}\r\n\r\nclass VisitTherapist extends Visit {\r\n    constructor({id, doctor, date, title, description, urgency, fullName, age}) {\r\n        super({id, doctor, date, title, description, urgency, fullName});\r\n        this.age = age;\r\n    }\r\n\r\n    renderTherapist(visit) {\r\n\r\n        return `<div class=\"visit__item\" >\r\n                       <div  id=\"${visit.id}\"> <ul class=\"visit__base\">\r\n                            \r\n                            <div class=\"visit__item-title\">\r\n                                    <div class=\"visit__base--title\" name=\"${visit.id}\">Visit Cards</div>  \r\n                                    \r\n                                    <div class=\"edit__button\">\r\n                                    <i class=\"fas fa-edit\" ></i>\r\n                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                    </div>\r\n                                       \r\n                            </div>\r\n                            <li class=\"visit__fullName\"><span class=\"span\">ФИО:</span><p>${visit.fullName}</p></li>  \r\n                            <li class=\"visit__doctor\"><span class=\"span\">Доктор:</span><p>${visit.doctor}</p></li>\r\n                        </ul>\r\n                        <input type=\"button\" value=\"Показать больше\" class=\"button__more\">\r\n                        <ul class=\"visit__option\">\r\n                            <li class=\"visit__title\"><span class=\"span\">Цель визита: </span><p>${visit.title}</p></li>\r\n                            <li class=\"visit__description\"><span class=\"span\">Описание визита: </span><p>${visit.description}</p></li>\r\n                            <li class=\"visit__urgency\"><span class=\"span\">Срочность: </span><p>${visit.urgency}</p></li>\r\n                            <li class=\"visit__date\"><p>${visit.date ? `<span class=\"span\">Дата визита: </span>${visit.date}` : ''}</p></li>\r\n                            <li class=\"visit__age\"><p>${visit.age ? `<span class=\"span\">Возраст: </span>${visit.age}` : ``}</p></li>                                               \r\n                        </ul></div>\r\n                        <div  id=\"test${visit.id}\"></div>\r\n                    </div>\r\n            `;\r\n    }\r\n\r\n    deleteVisit(visit) {\r\n        super.deleteVisit(visit);\r\n    }\r\n\r\n    editVisit(visit) {\r\n        super.editVisit(visit);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {Visit};\r\nexport {VisitCardiologist};\r\nexport {VisitDentist};\r\nexport {VisitTherapist};\r\n","import API from \"/modules/API.js\";\r\nimport {visitLayout} from '/filters/filters.js';\r\nimport {arrayVisitsView} from '/scripts/index.js';\r\nimport {VisitCardiologist, VisitDentist, VisitTherapist} from \"../models/visitsModel\";\r\n\r\n\r\nfunction getVisits() {\r\n\r\n    API.getCards()\r\n        .then(responses => {\r\n               responses.forEach(response => {\r\n           createVisitForView(response)\r\n\r\n        })\r\n            visitLayout(arrayVisitsView)\r\n})\r\n}\r\n\r\nfunction createVisitForView(object){           //создает обьект согласно нужного класса. Добавялет обьект в массив для отображения\r\n\r\n    let cardObjView = {}\r\n\r\n    if(object.doctor === 'Стоматолог'){\r\n        cardObjView = new VisitDentist(object)\r\n    }else\r\n    if (object.doctor === 'Кардиолог'){\r\n        cardObjView = new VisitCardiologist(object)\r\n    }else\r\n    if (object.doctor === 'Терапевт'){\r\n        cardObjView = new VisitTherapist(object)\r\n    }\r\n\r\n    arrayVisitsView.push(cardObjView)\r\n\r\n}\r\n\r\n\r\nexport {getVisits}\r\nexport {createVisitForView}\r\n","import API from \"/modules/API.js\";\r\nimport {createVisitForView} from \"/modules/getVisitsFromServer.js\"\r\nimport {errorResponse} from \"/modules/Layout.js\"\r\nimport Layout from \"/modules/Layout\";\r\nimport {visitLayout} from \"../filters/filters\";\r\nimport {arrayVisitsView, elementDeleteINArray} from \"../scripts\";\r\n\r\n//Функция формирования обьекта запроса\r\n//Функция отправки запроса на создание визита на серевере + получение ответа сервера\r\n\r\nfunction cardObjCreate() {\r\n\r\n    const form = document.querySelector('#form');\r\n\r\n    form.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n\r\n        let testObj = {}\r\n        const formData = new FormData(form);\r\n\r\n        for (let [key, value] of formData.entries()) {\r\n            testObj[key] = value;\r\n            if (value === '') {\r\n                return false\r\n            }\r\n        }\r\n\r\n        API.addCard(testObj)\r\n            .then(r => errorResponse(r)\r\n            )\r\n            .then((res) => {\r\n                form.reset()\r\n                Layout.newForm()\r\n                createVisitForView(JSON.parse(res))\r\n                visitLayout(arrayVisitsView)\r\n            })\r\n    })\r\n}\r\n\r\nfunction cardObjEdit(id) {\r\n\r\n    const form = document.getElementById(`form__edit_${id}`);\r\n    let cardObj = {}\r\n    const formData = new FormData(form);\r\n\r\n    for (let [key, value] of formData.entries()) {\r\n        cardObj[key] = value;\r\n        if (value === '') {\r\n            return false\r\n        }\r\n    }\r\n\r\n    API.changeCard(id, cardObj)\r\n        .then(response => {\r\n            return JSON.parse(response)\r\n        })\r\n        .then((res) => {\r\n            elementDeleteINArray(arrayVisitsView, res.id)\r\n            createVisitForView(res)\r\n            visitLayout(arrayVisitsView)\r\n        })\r\n}\r\n\r\nexport {cardObjCreate};\r\nexport {cardObjEdit};\r\n","class Modal {\r\n    constructor(title,\r\n                content,\r\n                selector,\r\n    ) {\r\n        this.selector = selector;\r\n        this.title = title;\r\n        this.content = content;}\r\n    renderModal(){\r\n        const modal = document.querySelector(this.selector);\r\n        modal.insertAdjacentHTML('afterbegin', `<button type=\"button\" id='button-enter' class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                          ${this.title}\r\n                        </button>\r\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">${this.title}</h5>\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                  </div>\r\n                  <form id=\"form\"><div class=\"modal-body\">\r\n                  ${this.content}\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" id=\"submit\" class=\"btn btn-primary\">Отправить</button>\r\n                  </div></form>\r\n                </div>\r\n              </div>\r\n     </div>`)\r\n    }\r\n}\r\n\r\nexport  {Modal}","class Input{\r\n    constructor(typeInput,\r\n                classInput,nameInput,label\r\n\r\n    ){this.typeInput=typeInput;\r\n        this.classInput=classInput;\r\n        this.name=nameInput;\r\n        this.label=label\r\n        }\r\n    renderInput(){\r\n        return `<label  class=\"form-label clear\">${this.label}</label>\r\n<input type=${this.typeInput} class=\"clear ${this.classInput}\" name=${this.name}>`\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction loginForm(){\r\n    const elem1 =new Input(\"email\",\"form-control\",\"email\",\"Емейл\")\r\n    const elem2=new Input(\"password\",\"form-control\",\"password\",\"Пароль\")\r\n    return `${elem1.renderInput()} ${elem2.renderInput()}`\r\n}\r\n\r\n\r\n\r\nfunction formLogin(){\r\n    const form = document.createElement('div')\r\n    return form.innerHTML=loginForm()\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {Input,\r\n    formLogin}","class Select {\r\n    constructor(classSelect,nameSelect,stringSelect){\r\n        this.classSelect=classSelect;\r\n        this.nameSelect=nameSelect;\r\n        this.stringSelect=stringSelect\r\n}\r\n    renderSelect(){\r\n        const comma= ','\r\n        const arrayString=this.stringSelect.split(comma)\r\n\r\n return `<select   class=\"${arrayString[4]} ${this.classSelect}\" name=${this.nameSelect} >\r\n            <option selected >${arrayString[0]}</option>\r\n            <option value=\"${arrayString[1]}\">${arrayString[1]}</option>\r\n            <option value=\"${arrayString[2]}\">${arrayString[2]}</option>\r\n            <option value=\"${arrayString[3]}\">${arrayString[3]}</option>\r\n        </select> \r\n`    }\r\n}\r\n\r\n\r\n\r\nexport  {Select}","class Textarea{\r\n    constructor(rows,cols,name,label,classTextarea) {\r\n        this.rows=rows;\r\n        this.cols=cols;\r\n        this.name=name;\r\n        this.label=label\r\n        this.class=classTextarea\r\n    }\r\n    renderTextarea(){\r\n        return`  <label  class=\"form-label clear\">${this.label}</label>\r\n  <textarea rows=${this.rows} class=${this.class} cols=${this.cols} name=${this.name}></textarea>`\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport  {Textarea }","import {Input} from \"./classInputs\";\r\nimport {Select} from \"./classSelect\"\r\nimport {Textarea} from \"./classTextarea\";\r\n\r\nclass Form{\r\n    constructor() {\r\n\r\n    }\r\n    renderDoctor() {const form = document.createElement('div')\r\n        const elemSelect = new Select(\"form-select\", \"urgency\", 'Срочность,Обычная,Приоритетная,Неотложная,clear')\r\n        const elemCreate2 = new Input(\"text\", \"form-control\", \"title\", \"Введите цель визита\")\r\n        const elemCreate4 = new Input(\"text\", \"form-control\", \"fullName\", \"Введите Фамилию Имя Отчество\")\r\n        const elemTextarea = new Textarea(\"5\", \"58\", \"description\", \"Краткое описание визита\",\"clear\")\r\n        return form.innerHTML = `\r\n\r\n${elemSelect.renderSelect()} \r\n${elemCreate2.renderInput()}\r\n${elemCreate4.renderInput()}\r\n${elemTextarea.renderTextarea()}` }\r\n    static formValid(){\r\n        const form = document.querySelector('#form')\r\n\r\n        const formReq = document.querySelectorAll('.form-control')\r\n\r\n        form.addEventListener('submit', function (event) {\r\n            event.preventDefault()\r\n            const errors = form.querySelectorAll('.error')\r\n\r\n            for (let i = 0; i < errors.length; i++) {\r\n                errors[i].remove()\r\n            }\r\n\r\n            for (let i = 0; i < formReq.length; i++) {\r\n                if (!formReq[i].value) {\r\n                    const error = document.createElement('div')\r\n                    error.className = 'error'\r\n                    error.style.color = 'red'\r\n                    error.innerHTML = 'Не заполненое поле '\r\n                    form[i].parentElement.insertBefore(error, formReq[i])\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\nclass FormCardiolog extends Form{\r\n    constructor() {\r\n        super();\r\n    } renderDoctor() {\r\n\r\n        const form = document.createElement('div')\r\n\r\n        const elemCreate1 = new Input(\"date\", \"form-control\", \"date\", \"Введите дату визита \")\r\n        const elemCreate5 = new Input(\"text\", \"form-control\", \"pressure\", \"Введите давление в формате XXX/XX\")\r\n        const elemCreate6 = new Input(\"text\", \"form-control\", \"bodyMass\", \"Введите массу тела\")\r\n        const elemCreate7 = new Input(\"text\", \"form-control\", \"disease\", \"Введите перенесенные заболевания сердечно-сосудистой системы\")\r\n        const elemCreate8 = new Input(\"text\", \"form-control\", \"age\", \"Введите возраст пациента\")\r\n\r\n        return form.innerHTML = `\r\n\r\n${elemCreate1.renderInput()}\r\n${elemCreate5.renderInput()}\r\n${elemCreate6.renderInput()}\r\n${elemCreate7.renderInput()}\r\n${elemCreate8.renderInput()}\r\n`\r\n\r\n    }\r\n}\r\nclass FormDentist extends Form{constructor() {\r\n    super();\r\n}\r\n    renderDoctor() {\r\n        const form = document.createElement('div')\r\n\r\n        const elemCreate1 = new Input(\"date\", \"form-control\", \"date\", \"Введите дату визита \")\r\n        const elemCreate5 = new Input(\"date\", \"form-control\", \"dateOfLastVisit\", \"Введите дату последнего визита \")\r\n\r\n        return form.innerHTML = `\r\n${elemCreate1.renderInput()}\r\n${elemCreate5.renderInput()}\r\n\r\n`\r\n\r\n    }\r\n}\r\nclass  FormTherapist extends Form{constructor() {\r\n    super();\r\n}\r\n    renderDoctor(){\r\n        const form = document.createElement('div')\r\n\r\n        const elemCreate1 = new Input(\"date\", \"form-control\", \"date\", \"Введите дату визита \")\r\n        const elemCreate8 = new Input(\"text\", \"form-control\", \"age\", \"Введите возраст пациента\")\r\n\r\n        return form.innerHTML = `\r\n${elemCreate1.renderInput()}\r\n${elemCreate8.renderInput()}\r\n`\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    Form,\r\n    FormCardiolog,\r\n    FormDentist,\r\n    FormTherapist\r\n}","import API from \"/modules/API.js\";\r\nimport {cardObjCreate} from '/modules/sendDataFormOnServer'\r\nimport {getVisits} from \"./getVisitsFromServer\";\r\nimport {Modal} from \"./ClassModal\"\r\nimport {formLogin} from \"./classInputs\";\r\nimport {Select} from \"./classSelect\"\r\nimport {\r\n    Form,\r\n    FormCardiolog,\r\n    FormDentist,\r\n    FormTherapist\r\n} from \"./classForms\";\r\n\r\nfunction init() {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n\r\n        newForm();\r\n        getVisits();\r\n\r\n    } else {\r\n        document.querySelector('.visits__item-wrapper').insertAdjacentHTML(\"afterbegin\", `<h2>No items have been added</h2>`)\r\n        renderModalform()\r\n        responseEnter()\r\n    }\r\n}\r\n\r\n//форма авторизации\r\nfunction renderModalform() {\r\n    const modalLogin = new Modal('Войти', formLogin(), '.header',)\r\n    modalLogin.renderModal()\r\n    Form.formValid()\r\n\r\n}\r\n\r\n// отправка запроса авторизации\r\nfunction responseEnter() {\r\n    const getBtn = document.getElementById('submit');\r\n    const email = document.querySelector('[name=\"email\"]')\r\n    const password = document.querySelector('[name=\"password\"]')\r\n    getBtn.addEventListener('click', () => {\r\n        API.auth({\r\n            email:\r\n            email.value\r\n            // \"comandLink@gmail.com\"\r\n            ,\r\n            password:\r\n            // \"1234567890\"\r\n            password.value\r\n\r\n        }).then(r => errorResponse(r)\r\n        )\r\n            .then(token => {\r\n                localStorage.setItem('token', `${token}`)\r\n\r\n                init()\r\n            })\r\n    })\r\n}\r\n\r\n// Обработка ошибок при отпраавке запроса\r\nfunction errorResponse(res) {\r\n    if (res.ok) {\r\n        return res.text()\r\n    }\r\n    return res.text().then(error => {\r\n        const e = new Error('Упс  , что то пошло не так...')\r\n        e.data = error\r\n        throw e\r\n    })\r\n}\r\n\r\n// создаем форму в модальном окне и выводим туда список выбора докторов\r\nfunction newForm() {\r\n    const enter = document.getElementById('button-enter')\r\n    const modal = document.querySelector('.btn-close')\r\n    const buttonCreateVisit = document.querySelector('.header')\r\n    const btnExit = document.querySelector(\".btn-exit\")\r\n\r\n    const elemSelect = new Select(\"form-select\", \"doctor\", \"Выбор Врача,Кардиолог,Стоматолог,Терапевт,doctor\")\r\n\r\n    const ModalCreate = new Modal('Создать Визит', elemSelect.renderSelect(), '.header')\r\n    ModalCreate.renderModal()\r\n\r\n    if (btnExit) {\r\n        btnExit.remove()\r\n    }\r\n    if (enter) {\r\n        enter.remove()\r\n        modal.click()\r\n    }\r\n\r\n\r\n    const buttonExit = document.createElement('input')\r\n    buttonExit.classList.add(\"btn-exit\")\r\n    buttonExit.type = \"button\"\r\n    buttonExit.value = \"Выйти\"\r\n    buttonCreateVisit.prepend(buttonExit)\r\n    exit()\r\n    let returnValue = 0;\r\n    let selector = document.querySelector('[name=\"doctor\"]');\r\n    selector.addEventListener('change', function () {\r\n        returnValue = this.value\r\n        additionalForm(this.value)\r\n    }, false)\r\n    cardObjCreate()\r\n}\r\n\r\n// функция вычисления значения селекта выбора докторов\r\nfunction element() {\r\n    let selector = document.querySelector('[name=\"doctor\"]');\r\n    let returnValue = 0;\r\n\r\n    selector.addEventListener('change', function () {\r\n        returnValue = this.value\r\n    }, false)\r\n}\r\n\r\n// функция определения времени. Чтобы вставить в нашу форму на позицию текущей даты\r\nfunction dateNow() {\r\n    let name_input\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        let d = new Date();\r\n        let day = d.getDate();\r\n        let month = d.getMonth() + 1;\r\n        let year = d.getFullYear();\r\n        name_input = document.getElementById('dateNow')\r\n        name_input.value = day + \"-\" + month + \"-\" + year;\r\n    });\r\n    return name_input;\r\n}\r\n\r\n//    Функция генерации дополнительныъ полей ввода в модальном окне после выбора доктора\r\nfunction additionalForm(value) {\r\n\r\n    const enterAdd = document.querySelector('[name=\"doctor\"]')\r\n\r\n    let renderForm = '';\r\n    const elementsArr = document.querySelectorAll('.clear')\r\n\r\n    elementsArr.forEach((elem) => {\r\n        elem.remove()\r\n    })\r\n\r\n    if (value === 'Кардиолог') {\r\n        renderForm = new FormCardiolog()\r\n\r\n\r\n    } else if (value === 'Стоматолог') {\r\n        renderForm = new FormDentist()\r\n\r\n\r\n    } else if (value === 'Терапевт') {\r\n        renderForm = new FormTherapist()\r\n\r\n    }\r\n    const SiblingsInput = new Form()\r\n    dateNow()\r\n    enterAdd.insertAdjacentHTML('afterend', `${SiblingsInput.renderDoctor()}${renderForm.renderDoctor()}`)\r\n    Form.formValid()\r\n}\r\n\r\nfunction exit() {\r\n    const btnExit = document.querySelector(\".btn-exit\")\r\n\r\n    btnExit.addEventListener('click', () => {\r\n\r\n        localStorage.removeItem('token')\r\n        location.reload()\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    additionalForm,\r\n    renderModalform,\r\n    responseEnter,\r\n    element,\r\n    init,\r\n    exit,\r\n    newForm,\r\n    errorResponse\r\n}\r\n\r\nexport {errorResponse}\r\n","import testLayaut from \"/modules/Layout\";\r\nimport {getVisits} from \"../modules/getVisitsFromServer\";\r\n\r\n\r\ntestLayaut.init()\r\n\r\nlet arrayVisitsView = [];\r\n\r\nfunction elementDeleteINArray(array, deleteID){\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        if (array[i].id === deleteID) {\r\n            array.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport {arrayVisitsView};\r\nexport {elementDeleteINArray};"]}